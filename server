package cs.tcd.ie;

import java.net.DatagramPacket;
import java.net.DatagramSocket;

import tcdIO.Terminal;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
/*
 * @author: Kmla Sharma, Shane Moloney and David Hegarty
 * Student ID: 13319349
 */
public class Server extends Node {
	static final int DEFAULT_PORT = 50001;

	Terminal terminal;
	/*
	 * 
	 */
	Server(Terminal terminal, int port) 
	{
		try {
			this.terminal= terminal;
			socket= new DatagramSocket(port);
			listener.go();
		}
		catch(java.lang.Exception e) {e.printStackTrace();}
	}

	/**
	 * Assume that incoming packets contain a String and print the string.
	 */
	public synchronized void onReceipt(DatagramPacket packet) {
		try {
			
				
				
		}
		catch(Exception e) {e.printStackTrace();}
	}
	
	
	public synchronized void start() throws Exception 
	{
		organiseFile();
		terminal.println("Waiting for contact");
		this.wait();
	}
	
	public void organiseFile()
	{
		String fname= "names-short.txt";

		String line;
		int counter;
		File file;
		FileInputStream fin;
		BufferedReader in;
		FileOutputStream fout;
		BufferedWriter out;

		try {	
			file= new File(fname);
			System.out.println("File length: " + file.length());
			fin= new FileInputStream(file);
			in= new BufferedReader(new InputStreamReader(fin));
			
			counter= 0;
			while((fin.available()>0)) {
				line= in.readLine();
				//System.out.println(counter + ": " + line);
				if (((counter++)%100)==0) { wait(1000);}
			}

			in.close();
			fin.close();
		}
		catch(Exception e) {e.printStackTrace();}
	}
	
	
	public static void main(String[] args) 
	{
		try {					
			Terminal terminal= new Terminal("Server");
			(new Server(terminal, DEFAULT_PORT)).start();
			terminal.println("Program completed");
		} catch(java.lang.Exception e) {e.printStackTrace();}
	}
}
